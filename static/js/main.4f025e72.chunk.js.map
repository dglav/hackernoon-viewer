{"version":3,"sources":["context/theme/theme.context.js","context/posts/posts.types.js","context/posts/posts.context.js","context/user/user.context.js","components/login-button/login-button.styles.js","components/login-button/login-button.component.jsx","components/header/header.styles.js","components/header/header.component.jsx","components/footer/footer.styles.js","components/footer/footer.component.jsx","components/body/body.styles.js","components/tabs/tabs.styles.js","context/posts/posts.actions.js","firebase/firebase.utils.js","components/tabs/tabs.component.jsx","hooks/hooks.js","components/icon-tray/icon-tray.styles.js","components/icon-tray/icon-tray.component.jsx","components/post-card/post-card.styles.js","components/post-card/post-card.component.jsx","components/feed/feed.component.jsx","components/bookmarks/bookmarks.component.jsx","components/favorites/favorites.component.jsx","components/search-bar/search-bar.styles.js","components/search-bar/search-bar.component.jsx","components/body/body.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","Provider","value","darkPrimaryColor","defaultPrimaryColor","lightPrimaryColor","primaryTextColor","accentColor","secondaryTextColor","dividerColor","children","postTypes","ADD_FAVORITE","DELETE_FAVORITE","ADD_BOOKMARK","DELETE_BOOKMARK","REMOVE_SAVED_POSTS","addPostToList","posts","postToAdd","map","post","id","includes","removePostFromList","postIdToRemove","filter","postsReducer","state","action","type","favorites","payload","bookmarks","PostsContext","PostsContextProvider","useReducer","feedPosts","dispatch","UserContext","UserContextProvider","useState","user","setUser","LoginButtonContainer","styled","button","theme","LoginButton","useContext","onClick","clickHandler","HeaderContainer","header","Header","FooterContainer","footer","GitIcon","a","Footer","href","target","className","BodyContainer","div","ContentContainer","PostListContainer","TabsContainer","ul","rotate","keyframes","IconContainer","i","visible","syncing","css","addFavorite","addBookmark","readFromDatabase","collectionName","collectionRef","firestore","collection","get","snapshot","docs","doc","data","console","log","syncWithDatabase","docsFromDb","docIdsFromDb","docIdsFromApp","forEach","docRef","set","docIdDb","delete","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Tabs","selectedTab","setSelectedTab","setSyncing","onTabClick","tabName","currentTab","sync","useEffect","syncFromDatabase","name","checked","readOnly","htmlFor","useFilteredPosts","searchQuery","filteredPosts","setFilteredPosts","toLowerCase","hasUrl","Object","keys","title","url","IconTrayContainer","iconTrayVisibility","IconTray","postData","parent","iconClickHandler","animation","bookmarkIconHover","setBookmarkIconHover","favoriteIconHover","setFavoriteIconHover","removeIconHover","setRemoveIconHover","onIconHover","iconName","onMouseEnter","onMouseLeave","PostCardContainer","Title","h4","Subtitle","span","TimeAgo","addLocale","en","PostCard","by","time","score","descendants","formattedTimeAgo","format","commentUrl","setIconTrayVisibility","iconTrayAnimation","setIconTrayAnimation","toggleHover","hoverState","Feed","isLoading","setIsLoading","setPosts","queryCount","fetch","fetcher","json","response","responseToDisplay","slice","postId","postFetcher","postResponse","Promise","all","then","resolvedPosts","fetchData","Fragment","key","Favorites","length","SearchBarContainer","isInputFocused","InputContainer","input","SearchBar","onChange","setIsInputFocused","focusHandler","placeholder","onFocus","onBlur","Body","setSearchQuery","e","renderSwitch","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f025e72.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = props => {\r\n  const theme = {\r\n    darkPrimaryColor: \"#F57C00\",\r\n    defaultPrimaryColor: \"#FF9800\",\r\n    lightPrimaryColor: \"#FFE0B2\",\r\n    primaryTextColor: \"#212121\",\r\n    accentColor: \"#FFC107\",\r\n    secondaryTextColor: \"#757575\",\r\n    dividerColor: \"#BDBDBD\"\r\n  };\r\n  return (\r\n    <ThemeContext.Provider value={theme}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","const postTypes = {\r\n  ADD_FAVORITE: \"ADD_FAVORITE\",\r\n  DELETE_FAVORITE: \"DELETE_FAVORITE\",\r\n  ADD_BOOKMARK: \"ADD_BOOKMARK\",\r\n  DELETE_BOOKMARK: \"DELETE_BOOKMARK\",\r\n  REMOVE_SAVED_POSTS: \"REMOVE_SAVED_POSTS\"\r\n};\r\n\r\nexport default postTypes;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport postTypes from \"./posts.types\";\r\n\r\nconst addPostToList = (posts, postToAdd) => {\r\n  const postIds = posts.map(post => {\r\n    return post.id;\r\n  });\r\n  return postIds.includes(postToAdd.id) ? posts : [...posts, postToAdd];\r\n};\r\n\r\nconst removePostFromList = (posts, postIdToRemove) => {\r\n  const updatedPostList = posts.filter(post => {\r\n    if (post.id !== postIdToRemove) return post;\r\n  });\r\n  return updatedPostList;\r\n};\r\n\r\nconst postsReducer = (state, action) => {\r\n  let favoritesList = [];\r\n  let bookmarksList = [];\r\n\r\n  switch (action.type) {\r\n    case postTypes.ADD_FAVORITE:\r\n      favoritesList = addPostToList(state.favorites, action.payload);\r\n      return {\r\n        ...state,\r\n        favorites: favoritesList\r\n      };\r\n    case postTypes.DELETE_FAVORITE:\r\n      favoritesList = removePostFromList(state.favorites, action.payload);\r\n      return {\r\n        ...state,\r\n        favorites: favoritesList\r\n      };\r\n    case postTypes.REMOVE_SAVED_POSTS:\r\n      return {\r\n        ...state,\r\n        favorites: [],\r\n        bookmarks: []\r\n      };\r\n    case postTypes.ADD_BOOKMARK:\r\n      bookmarksList = addPostToList(state.bookmarks, action.payload);\r\n      return {\r\n        ...state,\r\n        bookmarks: bookmarksList\r\n      };\r\n    case postTypes.DELETE_BOOKMARK:\r\n      bookmarksList = removePostFromList(state.bookmarks, action.payload);\r\n      return {\r\n        ...state,\r\n        bookmarks: bookmarksList\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const PostsContext = createContext();\r\n\r\nconst PostsContextProvider = props => {\r\n  const [posts, dispatch] = useReducer(postsReducer, {\r\n    feedPosts: [],\r\n    favorites: [],\r\n    bookmarks: []\r\n  });\r\n  return (\r\n    <PostsContext.Provider value={{ posts, dispatch }}>\r\n      {props.children}\r\n    </PostsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PostsContextProvider;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = props => {\r\n  const [user, setUser] = useState(\"\");\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LoginButtonContainer = styled.button`\r\n  border-radius: 100px;\r\n  width: 96px;\r\n  height: 48px;\r\n  box-sizing: border-box;\r\n  color: ${props => props.theme.lightPrimaryColor};\r\n  border: 3px solid ${props => props.theme.lightPrimaryColor};\r\n  background-color: rgba(0, 0, 0, 0);\r\n  cursor: pointer;\r\n  font-family: \"Tomorrow\";\r\n  font-weight: 600;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: inset 0px 0px 5px grey;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${props => props.theme.lightPrimaryColor};\r\n    color: ${props => props.theme.darkPrimaryColor};\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { UserContext } from \"../../context/user/user.context\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\n\r\nimport { LoginButtonContainer } from \"./login-button.styles\";\r\n\r\nconst LoginButton = () => {\r\n  const { user, setUser } = useContext(UserContext);\r\n  const theme = useContext(ThemeContext);\r\n\r\n  const clickHandler = user => {\r\n    user ? setUser(\"\") : setUser(\"defaultUser\");\r\n  };\r\n\r\n  return (\r\n    <LoginButtonContainer onClick={() => clickHandler(user)} theme={theme}>\r\n      {user ? \"Logout\" : \"Login\"}\r\n    </LoginButtonContainer>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  font-size: 1.4em;\r\n  background-color: ${props => props.theme.darkPrimaryColor};\r\n  color: ${props => props.theme.primaryTextColor};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 56px;\r\n  box-sizing: border-box;\r\n  padding: 0 15%;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\n\r\nimport LoginButton from \"../login-button/login-button.component\";\r\n\r\nimport { HeaderContainer } from \"./header.styles\";\r\n\r\nconst Header = () => {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <HeaderContainer theme={theme}>\r\n      <p>Hacker News</p>\r\n      <LoginButton />\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterContainer = styled.footer`\r\n  width: 85%;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  color: ${props => props.theme.primaryTextColor};\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nexport const GitIcon = styled.a`\r\n  color: ${props => props.theme.darkPrimaryColor};\r\n  font-size: 2em;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\n\r\nimport { FooterContainer, GitIcon } from \"./footer.styles\";\r\n\r\nconst Footer = () => {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <FooterContainer theme={theme}>\r\n      <GitIcon\r\n        href=\"https://github.com/dglav/hackernoon-viewer\"\r\n        target=\"_blank\"\r\n        theme={theme}\r\n      >\r\n        <i className=\"fab fa-github\" />\r\n      </GitIcon>\r\n    </FooterContainer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BodyContainer = styled.div`\r\n  width: 70%;\r\n  box-sizing: border-box;\r\n  margin: 16px auto;\r\n  color: ${props => props.theme.primaryTextColor};\r\n`;\r\n\r\nexport const ContentContainer = styled.div`\r\n  border: 6px solid ${props => props.theme.darkPrimaryColor};\r\n  border-radius: 0 0 10px 10px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const PostListContainer = styled.div`\r\n  padding: 0 8px;\r\n`;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nexport const TabsContainer = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  li {\r\n    list-style: none;\r\n\r\n    input[type=\"radio\"] {\r\n      position: absolute;\r\n      top: 0;\r\n      left: -100px;\r\n      &:checked + label {\r\n        background-color: ${props => props.theme.darkPrimaryColor};\r\n        border-right: none;\r\n      }\r\n    }\r\n\r\n    label {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 128px;\r\n      height: 56px;\r\n      cursor: pointer;\r\n      text-align: center;\r\n      background-color: ${props => props.theme.defaultPrimaryColor};\r\n      border-radius: 10px 10px 0 0;\r\n\r\n      &:hover {\r\n        background-color: ${props => props.theme.darkPrimaryColor};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled.i`\r\n  margin-top: 4px;\r\n  display: ${props => (props.visible ? \"block\" : \"none\")};\r\n  animation: ${props =>\r\n    props.syncing\r\n      ? css`\r\n          ${rotate} 2s linear infinite\r\n        `\r\n      : css`none`};\r\n`;\r\n","import postTypes from \"./posts.types\";\r\n\r\nexport const addFavorite = post => {\r\n  return {\r\n    type: postTypes.ADD_FAVORITE,\r\n    payload: post\r\n  };\r\n};\r\n\r\nexport const deleteFavorite = postId => {\r\n  return {\r\n    type: postTypes.DELETE_FAVORITE,\r\n    payload: postId\r\n  };\r\n};\r\n\r\nexport const addBookmark = post => {\r\n  return {\r\n    type: postTypes.ADD_BOOKMARK,\r\n    payload: post\r\n  };\r\n};\r\n\r\nexport const deleteBookmark = postId => {\r\n  return {\r\n    type: postTypes.DELETE_BOOKMARK,\r\n    payload: postId\r\n  };\r\n};\r\n\r\nexport const removeSavedPosts = () => {\r\n  return {\r\n    type: postTypes.REMOVE_SAVED_POSTS,\r\n    payload: null\r\n  };\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCWLmJrw_OOwQ5mpoh3y6NtSw51xOU0WiU\",\r\n  authDomain: \"hackernoon-viewer.firebaseapp.com\",\r\n  databaseURL: \"https://hackernoon-viewer.firebaseio.com\",\r\n  projectId: \"hackernoon-viewer\",\r\n  storageBucket: \"hackernoon-viewer.appspot.com\",\r\n  messagingSenderId: \"863046137003\",\r\n  appId: \"1:863046137003:web:ce7a7821f70986e946b3ee\"\r\n};\r\n\r\nexport const readFromDatabase = async collectionName => {\r\n  try {\r\n    const collectionRef = firestore.collection(\r\n      `users/defaultUser/${collectionName}`\r\n    );\r\n\r\n    const snapshot = await collectionRef.get();\r\n    return snapshot.docs.map(doc => doc.data());\r\n  } catch (error) {\r\n    console.log(\"Error getting documents\", error);\r\n  }\r\n};\r\n\r\nexport const syncWithDatabase = async (collectionName, posts) => {\r\n  try {\r\n    const docsFromDb = await readFromDatabase(collectionName);\r\n    const docIdsFromDb = docsFromDb.map(post => post.id);\r\n    const docIdsFromApp = posts.map(post => post.id);\r\n\r\n    // Add to database\r\n    posts.forEach(async post => {\r\n      if (!docIdsFromDb.includes(post.id)) {\r\n        const docRef = firestore.doc(\r\n          `users/defaultUser/${collectionName}/${post.id}`\r\n        );\r\n        await docRef.set(post);\r\n      }\r\n    });\r\n\r\n    // Delete from database\r\n    docIdsFromDb.forEach(async docIdDb => {\r\n      if (!docIdsFromApp.includes(docIdDb)) {\r\n        const docRef = firestore.doc(\r\n          `users/defaultUser/${collectionName}/${docIdDb}`\r\n        );\r\n        await docRef.delete();\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log(\"Error in syncing with database\", error);\r\n  }\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firestore = firebase.firestore();\r\nexport default firebase;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\n\r\nimport { TabsContainer, IconContainer } from \"./tabs.styles\";\r\n\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\nimport { PostsContext } from \"../../context/posts/posts.context\";\r\nimport { UserContext } from \"../../context/user/user.context\";\r\n\r\nimport {\r\n  addFavorite,\r\n  addBookmark,\r\n  removeSavedPosts\r\n} from \"../../context/posts/posts.actions\";\r\n\r\nimport {\r\n  readFromDatabase,\r\n  syncWithDatabase\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nconst Tabs = ({ selectedTab: { selectedTab, setSelectedTab } }) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { posts, dispatch } = useContext(PostsContext);\r\n  const { user } = useContext(UserContext);\r\n  const [syncing, setSyncing] = useState(false);\r\n\r\n  const onTabClick = (tabName, ...[currentTab]) => {\r\n    if (user && currentTab === tabName) {\r\n      sync(tabName);\r\n    }\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  const sync = async tabName => {\r\n    setSyncing(true);\r\n    await syncWithDatabase(tabName, posts[tabName]);\r\n    setSyncing(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      async function syncFromDatabase() {\r\n        const favorites = await readFromDatabase(\"favorites\");\r\n        favorites.forEach(post => dispatch(addFavorite(post)));\r\n\r\n        const bookmarks = await readFromDatabase(\"bookmarks\");\r\n        bookmarks.forEach(post => dispatch(addBookmark(post)));\r\n      }\r\n      syncFromDatabase();\r\n    } else {\r\n      dispatch(removeSavedPosts());\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <TabsContainer theme={theme}>\r\n      <li>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"tab1\"\r\n          name=\"tab\"\r\n          checked={selectedTab === \"feed\"}\r\n          onClick={() => onTabClick(\"feed\")}\r\n          readOnly\r\n        />\r\n        <label htmlFor=\"tab1\">Feed</label>\r\n      </li>\r\n      <li>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"tab2\"\r\n          name=\"tab\"\r\n          onClick={() => onTabClick(\"bookmarks\", selectedTab)}\r\n        />\r\n        <label htmlFor=\"tab2\">\r\n          <span>Bookmarks</span>\r\n          {user ? (\r\n            <span>\r\n              <IconContainer\r\n                className=\"fas fa-sync\"\r\n                visible={selectedTab === \"bookmarks\"}\r\n                syncing={syncing}\r\n              ></IconContainer>\r\n            </span>\r\n          ) : null}\r\n        </label>\r\n      </li>\r\n      <li>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"tab3\"\r\n          name=\"tab\"\r\n          onClick={() => onTabClick(\"favorites\", selectedTab)}\r\n        />\r\n        <label htmlFor=\"tab3\">\r\n          <span>Favorites</span>\r\n          {user ? (\r\n            <span>\r\n              <IconContainer\r\n                className=\"fas fa-sync\"\r\n                visible={selectedTab === \"favorites\"}\r\n                syncing={syncing}\r\n              ></IconContainer>\r\n            </span>\r\n          ) : null}\r\n        </label>\r\n      </li>\r\n    </TabsContainer>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function useFilteredPosts(collection, searchQuery) {\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    searchQuery = searchQuery.toLowerCase();\r\n    if (searchQuery) {\r\n      setFilteredPosts(\r\n        collection.filter(post => {\r\n          const hasUrl = Object.keys(post).includes(\"url\");\r\n          if (\r\n            post.title.toLowerCase().includes(searchQuery) !== false ||\r\n            (hasUrl && post.url.includes(searchQuery) !== false)\r\n          )\r\n            return post;\r\n        })\r\n      );\r\n    } else {\r\n      setFilteredPosts(collection);\r\n    }\r\n  }, [collection, searchQuery]);\r\n\r\n  return filteredPosts;\r\n}\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nexport const IconTrayContainer = styled.div`\r\n  display: flex;\r\n  visibility: ${props => (props.iconTrayVisibility ? \"visible\" : \"hidden\")};\r\n  position: absolute;\r\n  right: -8px;\r\n  top: 0;\r\n  justify-content: right;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: ${props => props.theme.accentColor};\r\n  border-radius: 10px 0 0 10px;\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(180deg);\r\n  }\r\n`;\r\n\r\nexport const IconContainer = styled.div`\r\n  height: 100%;\r\n  width: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  .rotate {\r\n    animation: ${rotate} 1s ease-in-out;\r\n  }\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\nimport { PostsContext } from \"../../context/posts/posts.context\";\r\nimport { addFavorite, addBookmark } from \"../../context/posts/posts.actions\";\r\n\r\nimport { IconTrayContainer, IconContainer } from \"./icon-tray.styles\";\r\n\r\nconst IconTray = ({\r\n  postData,\r\n  parent,\r\n  iconClickHandler,\r\n  iconTrayVisibility,\r\n  animation\r\n}) => {\r\n  const theme = useContext(ThemeContext);\r\n  const { dispatch } = useContext(PostsContext);\r\n  const [bookmarkIconHover, setBookmarkIconHover] = useState(false);\r\n  const [favoriteIconHover, setFavoriteIconHover] = useState(false);\r\n  const [removeIconHover, setRemoveIconHover] = useState(false);\r\n\r\n  const onIconHover = iconName => {\r\n    if (iconName === \"bookmarks\") {\r\n      setBookmarkIconHover(!bookmarkIconHover);\r\n    } else if (iconName === \"favorites\") {\r\n      setFavoriteIconHover(!favoriteIconHover);\r\n    } else if (iconName === \"remove\") {\r\n      setRemoveIconHover(!removeIconHover);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IconTrayContainer\r\n      theme={theme}\r\n      iconTrayVisibility={iconTrayVisibility}\r\n      id=\"IconTray\"\r\n      className={`animated ${animation}`}\r\n    >\r\n      {parent === \"bookmarks\" ? null : (\r\n        <IconContainer\r\n          onClick={() => dispatch(addBookmark(postData))}\r\n          onMouseEnter={() => onIconHover(\"bookmarks\")}\r\n          onMouseLeave={() => onIconHover(\"bookmarks\")}\r\n        >\r\n          <i className={`${bookmarkIconHover ? \"fas\" : \"far\"} fa-bookmark`}></i>\r\n        </IconContainer>\r\n      )}\r\n\r\n      {parent === \"favorites\" ? null : (\r\n        <IconContainer\r\n          onClick={() => dispatch(addFavorite(postData))}\r\n          onMouseEnter={() => onIconHover(\"favorites\")}\r\n          onMouseLeave={() => onIconHover(\"favorites\")}\r\n        >\r\n          <i className={`${favoriteIconHover ? \"fas\" : \"far\"} fa-star`}></i>\r\n        </IconContainer>\r\n      )}\r\n\r\n      {parent === \"feed\" ? null : (\r\n        <IconContainer\r\n          onClick={iconClickHandler}\r\n          onMouseEnter={() => onIconHover(\"remove\")}\r\n          onMouseLeave={() => onIconHover(\"remove\")}\r\n        >\r\n          <i className={`fas fa-times ${removeIconHover ? \"rotate\" : \"\"}`}></i>\r\n        </IconContainer>\r\n      )}\r\n    </IconTrayContainer>\r\n  );\r\n};\r\n\r\nexport default IconTray;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostCardContainer = styled.div`\r\n  padding: 8px 0;\r\n  position: relative;\r\n  &:first-child {\r\n    #IconTray {\r\n      border-radius: 0 0 0 10px;\r\n    }\r\n  }\r\n  &:last-child {\r\n    #IconTray {\r\n      border-radius: 10px 0 4px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h4`\r\n  margin: 0;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport const Subtitle = styled.span`\r\n  margin: 0;\r\n  font-size: 0.7em;\r\n  color: ${props => props.theme.secondaryTextColor};\r\n  a {\r\n    text-decoration: none;\r\n    color: ${props => props.theme.secondaryTextColor};\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport TimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\n\r\nimport IconTray from \"../icon-tray/icon-tray.component\";\r\n\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\nimport { UserContext } from \"../../context/user/user.context\";\r\n\r\nimport { PostCardContainer, Title, Subtitle } from \"./post-card.styles\";\r\n\r\nTimeAgo.addLocale(en);\r\n\r\nconst PostCard = ({ postData, parent, iconClickHandler }) => {\r\n  const { id, by, time, title, url, score, descendants } = postData;\r\n  const theme = useContext(ThemeContext);\r\n  const { user } = useContext(UserContext);\r\n\r\n  const timeAgo = new TimeAgo(\"en-US\");\r\n  const formattedTimeAgo = timeAgo.format(time * 1000);\r\n  const commentUrl = `https://news.ycombinator.com/item?id=${id}`;\r\n\r\n  const [iconTrayVisibility, setIconTrayVisibility] = useState(false);\r\n  const [iconTrayAnimation, setIconTrayAnimation] = useState(\"\");\r\n\r\n  const toggleHover = hoverState => {\r\n    if (user) {\r\n      if (hoverState) {\r\n        setIconTrayVisibility(true);\r\n        setIconTrayAnimation(\"slideInRight\");\r\n      } else {\r\n        setIconTrayAnimation(\"slideOutRight\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PostCardContainer\r\n      onMouseEnter={() => toggleHover(true)}\r\n      onMouseLeave={() => toggleHover(false)}\r\n    >\r\n      <div id=\"content\">\r\n        <Title>{title}</Title>\r\n        <Subtitle theme={theme}>\r\n          {score} points | {by} | {formattedTimeAgo} |{\" \"}\r\n          <a href={commentUrl} target=\"_blank\">\r\n            {descendants} comments\r\n          </a>{\" \"}\r\n          |{\" \"}\r\n          <a href={url} target=\"_blank\">\r\n            {url}\r\n          </a>\r\n        </Subtitle>\r\n      </div>\r\n\r\n      {user ? (\r\n        <IconTray\r\n          postData={postData}\r\n          parent={parent}\r\n          iconTrayVisibility={iconTrayVisibility}\r\n          animation={iconTrayAnimation}\r\n          iconClickHandler={iconClickHandler}\r\n        />\r\n      ) : null}\r\n    </PostCardContainer>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useFilteredPosts } from \"../../hooks/hooks\";\r\n\r\nimport PostCard from \"../post-card/post-card.component\";\r\n\r\nconst Feed = ({ searchQuery }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const queryCount = 15;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setIsLoading(true);\r\n      const fetcher = await fetch(\r\n        \"https://hacker-news.firebaseio.com/v0/topstories.json\"\r\n      );\r\n      const response = await fetcher.json();\r\n\r\n      const responseToDisplay = response.slice(0, queryCount);\r\n\r\n      const posts = responseToDisplay.map(async postId => {\r\n        const postFetcher = await fetch(\r\n          `https://hacker-news.firebaseio.com/v0/item/${postId}.json`\r\n        );\r\n        const postResponse = await postFetcher.json();\r\n        return postResponse;\r\n      });\r\n\r\n      Promise.all(posts).then(resolvedPosts => {\r\n        setPosts(resolvedPosts);\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filteredPosts = useFilteredPosts(posts, searchQuery);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div>\r\n          {filteredPosts.map(post => {\r\n            return <PostCard key={post.id} postData={post} parent=\"feed\" />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { useFilteredPosts } from \"../../hooks/hooks\";\r\n\r\nimport { PostsContext } from \"../../context/posts/posts.context\";\r\nimport { deleteBookmark } from \"../../context/posts/posts.actions\";\r\n\r\nimport PostCard from \"../post-card/post-card.component\";\r\n\r\nconst Favorites = ({ searchQuery }) => {\r\n  const {\r\n    posts: { bookmarks },\r\n    dispatch\r\n  } = useContext(PostsContext);\r\n\r\n  const filteredPosts = useFilteredPosts(bookmarks, searchQuery);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredPosts.length ? (\r\n        filteredPosts.map(post => {\r\n          return (\r\n            <PostCard\r\n              key={post.id}\r\n              postData={post}\r\n              parent=\"bookmarks\"\r\n              iconClickHandler={() => dispatch(deleteBookmark(post.id))}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <p>No bookmarks to display. Login and add some!</p>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { useFilteredPosts } from \"../../hooks/hooks\";\r\n\r\nimport { PostsContext } from \"../../context/posts/posts.context\";\r\nimport { deleteFavorite } from \"../../context/posts/posts.actions\";\r\n\r\nimport PostCard from \"../post-card/post-card.component\";\r\n\r\nconst Favorites = ({ searchQuery }) => {\r\n  const {\r\n    posts: { favorites },\r\n    dispatch\r\n  } = useContext(PostsContext);\r\n\r\n  const filteredPosts = useFilteredPosts(favorites, searchQuery);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {filteredPosts.length ? (\r\n        filteredPosts.map(post => {\r\n          return (\r\n            <PostCard\r\n              key={post.id}\r\n              postData={post}\r\n              parent=\"favorites\"\r\n              iconClickHandler={() => dispatch(deleteFavorite(post.id))}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <p>No favorites to display. Login and add some!</p>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchBarContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  box-sizing: border-box;\r\n  background-color: ${props => props.theme.lightPrimaryColor};\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props =>\r\n    props.isInputFocused\r\n      ? props.theme.primaryTextColor\r\n      : props.theme.secondaryTextColor};\r\n`;\r\n\r\nexport const IconContainer = styled.i`\r\n  padding-left: 8px;\r\n`;\r\n\r\nexport const InputContainer = styled.input`\r\n  height: 100%;\r\n  flex: 1 0 auto;\r\n  padding: 0 8px;\r\n  border: none;\r\n  outline: none;\r\n  background-color: ${props => props.theme.lightPrimaryColor};\r\n  color: ${props =>\r\n    props.isInputFocused\r\n      ? props.theme.primaryTextColor\r\n      : props.theme.secondaryTextColor};\r\n  font-family: \"Tomorrow\";\r\n`;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\n\r\nimport {\r\n  SearchBarContainer,\r\n  IconContainer,\r\n  InputContainer\r\n} from \"./search-bar.styles\";\r\n\r\nconst SearchBar = ({ onChange }) => {\r\n  const theme = useContext(ThemeContext);\r\n  const [isInputFocused, setIsInputFocused] = useState(false);\r\n\r\n  const focusHandler = () => {\r\n    setIsInputFocused(!isInputFocused);\r\n  };\r\n\r\n  return (\r\n    <SearchBarContainer theme={theme} isInputFocused={isInputFocused}>\r\n      <IconContainer className=\"fas fa-search\" theme={theme}></IconContainer>\r\n      <InputContainer\r\n        type=\"search\"\r\n        placeholder=\"Filter based on: title, url\"\r\n        theme={theme}\r\n        onFocus={() => focusHandler()}\r\n        onBlur={() => focusHandler()}\r\n        isInputFocused={isInputFocused}\r\n        onChange={onChange}\r\n      />\r\n    </SearchBarContainer>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { ThemeContext } from \"../../context/theme/theme.context\";\r\n\r\nimport {\r\n  BodyContainer,\r\n  ContentContainer,\r\n  PostListContainer\r\n} from \"./body.styles\";\r\n\r\nimport Tabs from \"../tabs/tabs.component\";\r\nimport Feed from \"../feed/feed.component\";\r\nimport Bookmarks from \"../bookmarks/bookmarks.component\";\r\nimport Favorites from \"../favorites/favorites.component\";\r\nimport SearchBar from \"../search-bar/search-bar.component\";\r\n\r\nconst Body = () => {\r\n  const theme = useContext(ThemeContext);\r\n  const [selectedTab, setSelectedTab] = useState(\"feed\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const renderSwitch = selectedTab => {\r\n    switch (selectedTab) {\r\n      case \"feed\":\r\n        return <Feed searchQuery={searchQuery} />;\r\n      case \"bookmarks\":\r\n        return <Bookmarks searchQuery={searchQuery} />;\r\n      case \"favorites\":\r\n        return <Favorites searchQuery={searchQuery} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <BodyContainer theme={theme}>\r\n      <Tabs selectedTab={{ selectedTab, setSelectedTab }} />\r\n      <ContentContainer theme={theme}>\r\n        <SearchBar onChange={onChange} />\r\n        <PostListContainer>{renderSwitch(selectedTab)}</PostListContainer>\r\n      </ContentContainer>\r\n    </BodyContainer>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import React from \"react\";\nimport ThemeContextProvider from \"./context/theme/theme.context\";\nimport PostsContextProvider from \"./context/posts/posts.context\";\nimport UserContextProvider from \"./context/user/user.context\";\n\nimport Header from \"./components/header/header.component\";\nimport Footer from \"./components/footer/footer.component\";\nimport Body from \"./components/body/body.component\";\n\nfunction App() {\n  return (\n    <ThemeContextProvider>\n      <UserContextProvider>\n        <Header />\n        <PostsContextProvider>\n          <Body />\n        </PostsContextProvider>\n        <Footer />\n      </UserContextProvider>\n    </ThemeContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}